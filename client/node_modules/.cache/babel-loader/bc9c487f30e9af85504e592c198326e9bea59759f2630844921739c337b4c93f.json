{"ast":null,"code":"var _jsxFileName = \"/home/vansh/Desktop/Superreply-Internship-Task/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://super-reply-task-backend.onrender.com';\nexport default function VoiceSynthesizer() {\n  _s();\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [audioError, setAudioError] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const fileInputRef = useRef(null);\n  const audioRef = useRef(new Audio());\n  useEffect(() => {\n    const audio = audioRef.current;\n    return () => {\n      audio.pause();\n      audio.src = '';\n    };\n  }, []);\n  const validateFile = file => {\n    const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4'];\n    if (!validTypes.includes(file.type)) {\n      throw new Error('Invalid file type. Please upload an audio file (WAV, MP3, or MP4).');\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File size too large. Maximum size is 5MB.');\n    }\n  };\n  const handleFileChange = event => {\n    try {\n      var _event$target$files;\n      const selectedFile = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n      if (selectedFile) {\n        validateFile(selectedFile);\n        setFile(selectedFile);\n        setError('');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  const checkFileStatus = async fileName => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/check-file/${fileName}`);\n      if (response.data.exists && response.data.url) {\n        setAudioUrl(response.data.url);\n        setLoading(false);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Error checking file status:', err);\n      return false;\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text || !file) {\n      setError('Both text and voice file are required.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setAudioUrl('');\n    setUploadProgress(0);\n    setAudioError('');\n    const formData = new FormData();\n    formData.append('voiceFile', file);\n    formData.append('text', text);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/synthesize`, formData, {\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(progress);\n        }\n      });\n      console.log('Data received from API:', response.data);\n      if (response.data.url) {\n        setAudioUrl(response.data.url);\n        setLoading(false);\n      } else if (response.data.fileName) {\n        let retries = 0;\n        const maxRetries = 10;\n        const fileName = response.data.fileName.split('/').pop();\n        const checkFile = async () => {\n          if (retries >= maxRetries) {\n            throw new Error('Failed to generate audio file after multiple attempts');\n          }\n          const statusResponse = await axios.get(`${API_BASE_URL}/api/check-file/${fileName}`);\n          if (statusResponse.data.exists && statusResponse.data.url) {\n            setAudioUrl(statusResponse.data.url);\n            setLoading(false);\n            return true;\n          }\n          retries++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          return checkFile();\n        };\n        await checkFile();\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error during synthesis:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'An error occurred during synthesis');\n      setLoading(false);\n    }\n  };\n  const handleRetry = () => {\n    setError('');\n    setAudioUrl('');\n    setFile(null);\n    setText('');\n    setUploadProgress(0);\n    setAudioError('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  const playPause = () => {\n    const audio = audioRef.current;\n    if (audioUrl) {\n      if (isPlaying) {\n        audio.pause();\n        setIsPlaying(false);\n      } else {\n        setAudioError('');\n        if (audio.src !== audioUrl) {\n          audio.src = audioUrl;\n          audio.onerror = () => {\n            setAudioError('Failed to play audio. Please try again.');\n            setIsPlaying(false);\n          };\n          audio.onended = () => {\n            setIsPlaying(false);\n          };\n        }\n        audio.play().then(() => {\n          setIsPlaying(true);\n        }).catch(error => {\n          console.error('Error playing audio:', error);\n          setAudioError('Failed to play audio. Please try again.');\n          setIsPlaying(false);\n        });\n      }\n    }\n  };\n  const handleDownload = () => {\n    if (audioUrl) {\n      const link = document.createElement('a');\n      link.href = audioUrl;\n      link.download = 'synthesized_audio.mp3';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voice Synthesizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"voiceFile\",\n              children: \"Upload Voice File (WAV, MP3, or MP4, max 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"voiceFile\",\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".wav,.mp3,.mp4\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"textToSynthesize\",\n              children: \"Text to Synthesize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"textToSynthesize\",\n              value: text,\n              onChange: e => setText(e.target.value),\n              placeholder: \"Enter the text you want to synthesize...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert error\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-icon\",\n              children: \"\\u26A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading || !file || !text,\n              className: \"submit-button\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"loader\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 21\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Synthesize Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), uploadProgress > 0 && uploadProgress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar-fill\",\n                style: {\n                  width: `${uploadProgress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"audio-icon\",\n                  children: \"\\uD83D\\uDD0A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Generated Audio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: playPause,\n                  className: `play-button ${isPlaying ? 'playing' : ''}`,\n                  children: isPlaying ? 'Pause' : 'Play'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleDownload,\n                  className: \"download-button\",\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), audioError && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-error\",\n                children: audioError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), (error || audioUrl) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleRetry,\n              className: \"retry-button\",\n              children: \"Start Over\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceSynthesizer, \"MJNJrUfQ45fsJd4cbvE1R5+pXRw=\");\n_c = VoiceSynthesizer;\nvar _c;\n$RefreshReg$(_c, \"VoiceSynthesizer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","API_BASE_URL","VoiceSynthesizer","_s","text","setText","file","setFile","loading","setLoading","error","setError","audioUrl","setAudioUrl","uploadProgress","setUploadProgress","audioError","setAudioError","isPlaying","setIsPlaying","fileInputRef","audioRef","Audio","audio","current","pause","src","validateFile","validTypes","includes","type","Error","size","handleFileChange","event","_event$target$files","selectedFile","target","files","err","message","value","checkFileStatus","fileName","response","get","data","exists","url","console","handleSubmit","e","preventDefault","formData","FormData","append","post","onUploadProgress","progressEvent","progress","Math","round","loaded","total","log","retries","maxRetries","split","pop","checkFile","statusResponse","Promise","resolve","setTimeout","_err$response","_err$response$data","handleRetry","playPause","onerror","onended","play","then","catch","handleDownload","link","document","createElement","href","download","body","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","ref","accept","onChange","placeholder","disabled","style","width","onClick","_c","$RefreshReg$"],"sources":["/home/vansh/Desktop/Superreply-Internship-Task/client/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst API_BASE_URL = 'https://super-reply-task-backend.onrender.com';\n\nexport default function VoiceSynthesizer() {\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [audioError, setAudioError] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  \n  const fileInputRef = useRef(null);\n  const audioRef = useRef(new Audio());\n\n  useEffect(() => {\n    const audio = audioRef.current;\n    return () => {\n      audio.pause();\n      audio.src = '';\n    };\n  }, []);\n\n  const validateFile = (file) => {\n    const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4'];\n    if (!validTypes.includes(file.type)) {\n      throw new Error('Invalid file type. Please upload an audio file (WAV, MP3, or MP4).');\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File size too large. Maximum size is 5MB.');\n    }\n  };\n\n  const handleFileChange = (event) => {\n    try {\n      const selectedFile = event.target.files?.[0];\n      if (selectedFile) {\n        validateFile(selectedFile);\n        setFile(selectedFile);\n        setError('');\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An error occurred');\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  const checkFileStatus = async (fileName) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/check-file/${fileName}`);\n      \n      if (response.data.exists && response.data.url) {\n        setAudioUrl(response.data.url);\n        setLoading(false);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Error checking file status:', err);\n      return false;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text || !file) {\n      setError('Both text and voice file are required.');\n      return;\n    }\n  \n    setLoading(true);\n    setError('');\n    setAudioUrl('');\n    setUploadProgress(0);\n    setAudioError('');\n  \n    const formData = new FormData();\n    formData.append('voiceFile', file);\n    formData.append('text', text);\n  \n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/synthesize`, formData, {\n        onUploadProgress: (progressEvent) => {\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(progress);\n        },\n      });\n  \n      console.log('Data received from API:', response.data);\n  \n      if (response.data.url) {\n        setAudioUrl(response.data.url);\n        setLoading(false);\n      } else if (response.data.fileName) {\n        let retries = 0;\n        const maxRetries = 10;\n        const fileName = response.data.fileName.split('/').pop();\n  \n        const checkFile = async () => {\n          if (retries >= maxRetries) {\n            throw new Error('Failed to generate audio file after multiple attempts');\n          }\n\n          const statusResponse = await axios.get(`${API_BASE_URL}/api/check-file/${fileName}`);\n          \n          if (statusResponse.data.exists && statusResponse.data.url) {\n            setAudioUrl(statusResponse.data.url);\n            setLoading(false);\n            return true;\n          }\n          \n          retries++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          return checkFile();\n        };\n  \n        await checkFile();\n      }\n  \n    } catch (err) {\n      console.error('Error during synthesis:', err);\n      setError(err.response?.data?.message || err.message || 'An error occurred during synthesis');\n      setLoading(false);\n    }\n  };\n  \n  const handleRetry = () => {\n    setError('');\n    setAudioUrl('');\n    setFile(null);\n    setText('');\n    setUploadProgress(0);\n    setAudioError('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const playPause = () => {\n    const audio = audioRef.current;\n    \n    if (audioUrl) {\n      if (isPlaying) {\n        audio.pause();\n        setIsPlaying(false);\n      } else {\n        setAudioError('');\n        \n        if (audio.src !== audioUrl) {\n          audio.src = audioUrl;\n          \n          audio.onerror = () => {\n            setAudioError('Failed to play audio. Please try again.');\n            setIsPlaying(false);\n          };\n          \n          audio.onended = () => {\n            setIsPlaying(false);\n          };\n        }\n        \n        audio.play()\n          .then(() => {\n            setIsPlaying(true);\n          })\n          .catch(error => {\n            console.error('Error playing audio:', error);\n            setAudioError('Failed to play audio. Please try again.');\n            setIsPlaying(false);\n          });\n      }\n    }\n  };\n\n  const handleDownload = () => {\n    if (audioUrl) {\n      const link = document.createElement('a');\n      link.href = audioUrl;\n      link.download = 'synthesized_audio.mp3';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2>Voice Synthesizer</h2>\n        </div>\n        <div className=\"card-content\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"voiceFile\">\n                Upload Voice File (WAV, MP3, or MP4, max 5MB)\n              </label>\n              <input\n                id=\"voiceFile\"\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".wav,.mp3,.mp4\"\n                onChange={handleFileChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"textToSynthesize\">\n                Text to Synthesize\n              </label>\n              <textarea\n                id=\"textToSynthesize\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"Enter the text you want to synthesize...\"\n              />\n            </div>\n\n            {error && (\n              <div className=\"alert error\">\n                <span className=\"alert-icon\">⚠</span>\n                <div className=\"alert-content\">\n                  <h3>Error</h3>\n                  <p>{error}</p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"button-container\">\n              <button\n                type=\"submit\"\n                disabled={loading || !file || !text}\n                className=\"submit-button\"\n              >\n                {loading ? (\n                  <span className=\"loading-text\">\n                    <span className=\"loader\"></span>\n                    Processing...\n                  </span>\n                ) : (\n                  <span>Synthesize Audio</span>\n                )}\n              </button>\n\n              {uploadProgress > 0 && uploadProgress < 100 && (\n                <div className=\"progress-bar\">\n                  <div\n                    className=\"progress-bar-fill\"\n                    style={{ width: `${uploadProgress}%` }}\n                  ></div>\n                </div>\n              )}\n\n              {audioUrl && (\n                <div className=\"audio-section\">\n                  <div className=\"audio-header\">\n                    <span className=\"audio-icon\">🔊</span>\n                    <span>Generated Audio</span>\n                  </div>\n                  <div className=\"audio-controls\">\n                    <button \n                      onClick={playPause}\n                      className={`play-button ${isPlaying ? 'playing' : ''}`}\n                    >\n                      {isPlaying ? 'Pause' : 'Play'}\n                    </button>\n                    <button\n                      onClick={handleDownload}\n                      className=\"download-button\"\n                    >\n                      Download\n                    </button>\n                  </div>\n                  {audioError && (\n                    <div className=\"audio-error\">\n                      {audioError}\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {(error || audioUrl) && (\n                <button\n                  type=\"button\"\n                  onClick={handleRetry}\n                  className=\"retry-button\"\n                >\n                  Start Over\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}