{"ast":null,"code":"var _jsxFileName = \"/home/vansh/Desktop/Voice-Synthesisor/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceSynthesizer = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const audioRef = useRef(null);\n\n  // File validation logic\n  const validateFile = file => {\n    const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4'];\n    if (!validTypes.includes(file.type)) {\n      throw new Error('Invalid file type. Please upload an audio file (WAV, MP3, or MP4).');\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File size too large. Maximum size is 5MB.');\n    }\n  };\n\n  // Event handlers remain the same\n  const handleFileChange = event => {\n    try {\n      const selectedFile = event.target.files[0];\n      if (selectedFile) {\n        validateFile(selectedFile);\n        setFile(selectedFile);\n        setError('');\n      }\n    } catch (err) {\n      setError(err.message);\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Check if the generated audio file exists\n  const checkFileStatus = async fileName => {\n    try {\n      const response = await axios.get(`http://localhost:3001/api/check-file/${fileName}`);\n      console.log('File check response:', response.data); // Log the response\n\n      if (response.data.exists && response.data.url) {\n        displayAudio(response.data.url);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Error checking file status:', err);\n      return false;\n    }\n  };\n\n  // Function to display audio\n  const displayAudio = audioUrl => {\n    setAudioUrl(audioUrl);\n    setLoading(false);\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text || !file) {\n      setError('Both text and voice file are required.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setAudioUrl('');\n    setUploadProgress(0);\n    const formData = new FormData();\n    formData.append('voiceFile', file);\n    formData.append('text', text);\n    try {\n      const response = await fetch('http://localhost:3001/api/synthesize', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to synthesize audio');\n      }\n      const data = await response.json();\n      console.log('Data received from API:', data); // Log the response data\n\n      let retries = 0;\n      const maxRetries = 10;\n      const fileName = data.fileName.split('/').pop();\n      const checkFile = async () => {\n        if (retries >= maxRetries) {\n          throw new Error('Failed to generate audio file after multiple attempts');\n        }\n        const exists = await checkFileStatus(fileName);\n        if (!exists) {\n          retries++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          return checkFile();\n        }\n      };\n      await checkFile();\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Reset all states for retry\n  const handleRetry = () => {\n    setError('');\n    setAudioUrl('');\n    setFile(null);\n    setText('');\n    setUploadProgress(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Voice Synthesizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Voice File (WAV, MP3, or MP4, max 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".wav,.mp3,.mp4\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Text to Synthesize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: text,\n              onChange: e => setText(e.target.value),\n              placeholder: \"Enter the text you want to synthesize...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert error\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"alert-icon\",\n              children: \"\\u26A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading || !file || !text,\n              className: \"submit-button\",\n              children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"loading-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"loader\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), \"Processing...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Synthesize Audio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), uploadProgress > 0 && uploadProgress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar-fill\",\n                style: {\n                  width: `${uploadProgress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"audio-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"audio-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"audio-icon\",\n                  children: \"\\uD83D\\uDD0A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Generated Audio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n                ref: audioRef,\n                controls: true,\n                src: audioUrl,\n                children: \"Your browser does not support the audio element.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), (error || audioUrl) && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleRetry,\n              className: \"retry-button\",\n              children: \"Start Over\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceSynthesizer, \"S8wyrAfSfmlA5q3AEnJ1eA5avTQ=\");\n_c = VoiceSynthesizer;\nexport default VoiceSynthesizer;\nvar _c;\n$RefreshReg$(_c, \"VoiceSynthesizer\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","VoiceSynthesizer","_s","text","setText","file","setFile","loading","setLoading","error","setError","audioUrl","setAudioUrl","uploadProgress","setUploadProgress","fileInputRef","audioRef","validateFile","validTypes","includes","type","Error","size","handleFileChange","event","selectedFile","target","files","err","message","current","value","checkFileStatus","fileName","response","get","console","log","data","exists","url","displayAudio","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","body","ok","errorData","json","retries","maxRetries","split","pop","checkFile","Promise","resolve","setTimeout","handleRetry","className","children","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","accept","onChange","placeholder","disabled","style","width","controls","src","onClick","_c","$RefreshReg$"],"sources":["/home/vansh/Desktop/Voice-Synthesisor/client/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst VoiceSynthesizer = () => {\n  const [text, setText] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [audioUrl, setAudioUrl] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef(null);\n  const audioRef = useRef(null);\n\n  // File validation logic\n  const validateFile = (file) => {\n    const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4'];\n    if (!validTypes.includes(file.type)) {\n      throw new Error('Invalid file type. Please upload an audio file (WAV, MP3, or MP4).');\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      throw new Error('File size too large. Maximum size is 5MB.');\n    }\n  };\n\n  // Event handlers remain the same\n  const handleFileChange = (event) => {\n    try {\n      const selectedFile = event.target.files[0];\n      if (selectedFile) {\n        validateFile(selectedFile);\n        setFile(selectedFile);\n        setError('');\n      }\n    } catch (err) {\n      setError(err.message);\n      setFile(null);\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n\n  // Check if the generated audio file exists\n  const checkFileStatus = async (fileName) => {\n    try {\n      const response = await axios.get(`http://localhost:3001/api/check-file/${fileName}`);\n      console.log('File check response:', response.data); // Log the response\n\n      if (response.data.exists && response.data.url) {\n        displayAudio(response.data.url);\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.error('Error checking file status:', err);\n      return false;\n    }\n  };\n\n  // Function to display audio\n  const displayAudio = (audioUrl) => {\n    setAudioUrl(audioUrl);\n    setLoading(false);\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text || !file) {\n      setError('Both text and voice file are required.');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setAudioUrl('');\n    setUploadProgress(0);\n\n    const formData = new FormData();\n    formData.append('voiceFile', file);\n    formData.append('text', text);\n\n    try {\n      const response = await fetch('http://localhost:3001/api/synthesize', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to synthesize audio');\n      }\n\n      const data = await response.json();\n      console.log('Data received from API:', data); // Log the response data\n\n      let retries = 0;\n      const maxRetries = 10;\n      const fileName = data.fileName.split('/').pop();\n\n      const checkFile = async () => {\n        if (retries >= maxRetries) {\n          throw new Error('Failed to generate audio file after multiple attempts');\n        }\n\n        const exists = await checkFileStatus(fileName);\n        if (!exists) {\n          retries++;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          return checkFile();\n        }\n      };\n\n      await checkFile();\n\n    } catch (err) {\n      setError(err.message);\n      setLoading(false);\n    }\n  };\n\n  // Reset all states for retry\n  const handleRetry = () => {\n    setError('');\n    setAudioUrl('');\n    setFile(null);\n    setText('');\n    setUploadProgress(0);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h2>Voice Synthesizer</h2>\n        </div>\n        <div className=\"card-content\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label>\n                Upload Voice File (WAV, MP3, or MP4, max 5MB)\n              </label>\n              <input\n                ref={fileInputRef}\n                type=\"file\"\n                accept=\".wav,.mp3,.mp4\"\n                onChange={handleFileChange}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>\n                Text to Synthesize\n              </label>\n              <textarea\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"Enter the text you want to synthesize...\"\n              />\n            </div>\n\n            {error && (\n              <div className=\"alert error\">\n                <span className=\"alert-icon\">⚠</span>\n                <div className=\"alert-content\">\n                  <h3>Error</h3>\n                  <p>{error}</p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"button-container\">\n              <button\n                type=\"submit\"\n                disabled={loading || !file || !text}\n                className=\"submit-button\"\n              >\n                {loading ? (\n                  <span className=\"loading-text\">\n                    <span className=\"loader\"></span>\n                    Processing...\n                  </span>\n                ) : (\n                  <span>\n                    Synthesize Audio\n                  </span>\n                )}\n              </button>\n\n              {uploadProgress > 0 && uploadProgress < 100 && (\n                <div className=\"progress-bar\">\n                  <div\n                    className=\"progress-bar-fill\"\n                    style={{ width: `${uploadProgress}%` }}\n                  ></div>\n                </div>\n              )}\n\n              {audioUrl && (\n                <div className=\"audio-section\">\n                  <div className=\"audio-header\">\n                    <span className=\"audio-icon\">🔊</span>\n                    <span>Generated Audio</span>\n                  </div>\n                  <audio\n                    ref={audioRef}\n                    controls\n                    src={audioUrl}\n                  >\n                    Your browser does not support the audio element.\n                  </audio>\n                </div>\n              )}\n\n              {(error || audioUrl) && (\n                <button\n                  type=\"button\"\n                  onClick={handleRetry}\n                  className=\"retry-button\"\n                >\n                  Start Over\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VoiceSynthesizer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}